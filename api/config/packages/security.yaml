security:
  encoders:
    App\Entity\User:
      algorithm: bcrypt

  role_hierarchy:
    ROLE_ADMIN:       ROLE_USER
    ROLE_SUPER_ADMIN: ROLE_ADMIN

  providers:
    entity_provider:
      entity:
        class: App\Entity\User
        property: username

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false

    login:
      pattern:  ^/login
      stateless: true
      anonymous: true
      user_checker: App\Security\UserChecker
      json_login:
        check_path: /login_check
        username_path: username
        password_path: password
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
        require_previous_session: false

    main:
      pattern:   ^/
      stateless: true
      anonymous: true
      provider: entity_provider
      guard:
        authenticators:
        - lexik_jwt_authentication.jwt_token_authenticator

  access_control:
  - { path: ^/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
  - { path: ^/docs, role: IS_AUTHENTICATED_ANONYMOUSLY }
  - { path: ^/, roles: [ ROLE_USER ] }